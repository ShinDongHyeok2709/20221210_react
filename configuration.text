vs 설치 -> git 설치 -> github 설치 -> node.js 설치 -> github에서 소스 내려받아 실행하기
1. git 설치 : local repository를 사용함
https://git-scm.com/downloads에서 다운로드후 설치

2.github 설치 : git를 이용하며, 클라우드 서비스를 사용함
https://github.com/의 우측상단에서 + 버튼 New Repository 선택 
-> 다음 화면에서 리파지토리명과 공유여부 선택 
-> 다음화면에서 [Set up in Desktop] 선택하여 클라이언트 다운로드하여 설치, https url 복사
-> Github Desktop 프로그램 설정 : File > Options... 선택후 Account에서 로그인, Git에 Name, Email 정보 등록
-> Github Desktop 프로그램에서 File > Clone repository... 선택후 URL탭에서 복사한 url을 붙여넣고, Local Path에 소스가 위치할 폴더를 선택하고 Clone 버튼을 클릭  
-> 탐색기에서 소스 코드 위치 폴더에 소스를 만든후, Github Desktop 프로그램의 왼쪽 Changes 탭 하단에 Summary와 Description을 기술하고, Commit to main -> Publish를 클릭함

용어 정리 : 
add : 커밋할 파일들을 고른다.
commit : 메시지와 함께 변경사항을 로컬 컴퓨터에 남긴다. commit후 publish해야 반영됨
push : 원격 저장소에 코드를 업로드 한다.
pull : 원격 저장소에 저장된 변경 내역을 내 컴퓨터에 반영한다.
 
3. node.js 설치
https://nodejs.org/ko/에서 LTS버전 다운로드후 설치
-> cmd에서 설치 폴더로 이동후 npx create-react-app 프로젝트명(learn_react)
-> cmd에서 cd learn_react
-> code . //vs가 실행됨
-> vs의 터미널 > 새터미널에서 npm start를 입력함

react default 파일 설명 :
package.json : 프로젝트 메타데이터, 라이브러리 정보 포함
- "dependencies": {}, : 설치된 라이브러리 정보, 라이브러리는 /node_modules 폴더 하위에 존재함
- "scripts": {}, : npm 명령어, start는 개발용서버를 실행함
- "eslintConfig": {}, : eslink 설정임
.gitignore : github 커밋시 제외할 폴더 및 파일정보 포함, github는 package.json만 참조함
- # dependencies는 github 커밋시 제외할 폴더 정보임, /node_modules는 기본 제외됨

4. github에서 소스코드 내려 받은 react 프로그램 실행하기
-> cmd에서 npm i // node_modules를 다시 설치함

강사 Repository : https://github.com/hbs30832/

화면 Label에 다국어 적용은?

xxx.js를 xxx.jsx로 확장자를 바꾸면 vs에서 .작성시 더 자세한 메소드와 편의 기능을 자동 제공함